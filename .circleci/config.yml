version: 2
jobs:

  build_api:
    docker:
      - image: circleci/python:3.6.1
      - image: mdillon/postgis
        name: postgres
    environment:
      POSTGRES_PASSWORD: "pwd"
      DJANGO_ENVIRONMENT: "development"
      DJANGO_SECRET: "test-secret"
      CPLUS_INCLUDE_PATH: "/usr/include/gdal"
      C_INCLUDE_PATH: "/usr/include/gdal"
    working_directory: ~/repo/api
    steps:
      - checkout:
          path: ~/repo

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: install gis dependencies
          command: apt-get -t unstable install -y libgdal-dev g++

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: make migrations
          command: |
            sleep 2
            . venv/bin/activate
            python manage.py makemigrations
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python manage.py test

  build_site:
    docker:
      - image: circleci/node
    working_directory: ~/repo/site
    steps:
      - checkout:
          path: ~/repo

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}

      - run:
          name: install dependencies
          command: yarn add package.json

      - save_cache:
          paths:
            - ./node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      - run:
          name: build rect app
          command: yarn build


  deploy:
        machine:
          enabled: true
        steps:
        - add_ssh_keys

        - run:
            name: Deploy Over SSH
            command: |
              ssh -o "StrictHostKeyChecking no" $SSH_USER@$SSH_HOST "/home/blimp/deploy.sh ${CIRCLE_SHA1}"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_api
      - build_site
      - deploy:
          requires:
            - build_api
            - build_site
          filters:
            branches:
              only: master
